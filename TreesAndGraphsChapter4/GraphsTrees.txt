Graph :
Cyclic or Acyclic
Weighthed or Unweighted 
Directed or Undirected

Shortest Paths : 
Bellman 
Dijkstra


Graph Traversal && Tree Traversal: O(n)
Breadth first dearch
Depth first search
Inorder
Postorder
Preorder
Recursion (be mindful of Space Complexity (Stack overflow))

Tree : 
- Used to represent hierarchical data.
- Databases (indexing).
- Autocompletion.
- Compilers.
- Compression.

A data structure that stores elements in a hierarchy 
those elements are nodea and the elements that connect them are edges.
Each node contains a value or data object.
The root is the parrent of the nodes.
the nodes on the bottom are leaf nodes.

Binary Tree : each node has two children.
lookup O(log n)
insert O(log n)
delete O(log n)
better than arrays and linked lists

Binary Search Tree : easly look up the data, the value left < node < right.
Balanced BST lookup O(log n)
             insert O(log n)
             delete O(log n)
AVL Tree
Red Black Tree 
Heap 
Trie
Binary Heap lookup O(n)
            insert O(log n)
            delete O(log n)
Priority Queue


AVL Trees : Self balanced Trees AVL Trees (Adelson-Velsky and Landis)
    A Balanaced Binary Trees  height(left subtree) - height(right subtree) <= 1
Rotation performed by the avl trees to rebalance themselves  depends on the heavy side:
Left ll 
Right RR 
left-right 
right-left 
1->2->3 left rotation 1
3->2->1 right rotation 3
10->5->7 left rotation right rotation


Other self balanced trees : Reb black tree, B-trees, Splay Trees, 2-3 Trees.

Perfect tree : A binary tree where every level except the last is full of nodes
Left skewed sorted in decreasing order ~ a linked list
right skewed sorted in increasing order ~ a linked list


Heaps : A complete tree ~ filled from left to right
        Heap property ~ Max Heap : every node is less than or equat of its root.
Max Heap = the root holds the max value  (bubble up the max value)
Min Heap = the root holds the smallest value (bubble up the small value)
Binary heap : A binary tree complete with a heap property.
heaps we can only delete the root node.
delete log(n)
insert log(n)
 
heaps used in : 
- Sorting(HeapSort)
- Graph algorithms(find the shortest path)
- Priority queues
- Finding the Kth smallest/ largest value. 

height in a balanced tree h = log(n)
